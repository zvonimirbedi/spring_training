package com.zvone.spring.rest;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.zvone.spring.entity.PojoStudent;

@RestController
@RequestMapping("/api")
public class ControllerRestStudent {
	private List<PojoStudent> theStudents = new ArrayList<>();
	
	@PostConstruct
	public void loadData()	{
		theStudents.add(new PojoStudent ("Marko","Markic"));
		theStudents.add(new PojoStudent ("Ivica","Ivikovic"));
		theStudents.add(new PojoStudent ("Zvone","Zvonic"));	
		theStudents.add(new PojoStudent ("Dino","Dinic"));			
	}	
	
	@GetMapping("studentsAll")
	public List<PojoStudent> getStudentsAll(){	
		return theStudents;
	}	
	
	@GetMapping("studentsById/{id}")
	public PojoStudent getStudentsById(@PathVariable int id){
		
		if(id >= theStudents.size() || id <0)
			throw new ExceptionStudentNotFound("Student id not found - " + id);
		return theStudents.get(id);
	}
	
	// Add an exeption handler using @ExceptionHandler
	
	@ExceptionHandler
	public ResponseEntity<PojoErrorRestStudentResponse> handleException (ExceptionStudentNotFound exc){
		
		// create a ExceptionStudentNotFound class
		PojoErrorRestStudentResponse error = new PojoErrorRestStudentResponse();

		error.setStatus(HttpStatus.NOT_FOUND.value());
		error.setMessage(exc.getMessage());
		error.setTimestamp(System.currentTimeMillis());
		
		// return ResponseEntity
		
		return new ResponseEntity<>(error, HttpStatus.NOT_FOUND);
	}
	

	// Add another generic exeption handler using @ExceptionHandler
	@ExceptionHandler
	public ResponseEntity<PojoErrorRestStudentResponse> handleException (Exception exc){
		return null;
	}
	}
}
